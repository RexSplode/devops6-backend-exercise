---
name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Configure known_hosts
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.BASTION_PUBLIC_IP }} >> ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.BACKEND_PRIVATE_IP }} >> ~/.ssh/known_hosts
          echo "known_hosts content:"
          cat ~/.ssh/known_hosts
          echo "SSH directory content:"
          ls -la ~/.ssh
      
      - name: Test SSH connection
        run: |
          echo "Testing SSH to backend instance through bastion"
          ssh -o StrictHostKeyChecking=no -o ProxyCommand="ssh -W %h:%p -q ec2-user@${{ secrets.BASTION_PUBLIC_IP }}" ec2-user@${{ secrets.EC2_PRIVATE_IP }} exit || true
        continue-on-error: true

      - name: Build an image
        run: docker build -t backend .

      - name: Deploy to EC2 instance
        run: |
          ssh -o ProxyCommand="ssh -W %h:%p -q ec2-user@${{ secrets.BASTION_PUBLIC_IP }}" ec2-user@${{ secrets.BACKEND_PRIVATE_IP }} "
          docker ps -q --filter 'ancestor=backend' | xargs -r docker stop;
          docker ps -a -q --filter 'ancestor=backend' | xargs -r docker rm;
          docker run -d -p 80:8080 backend"
